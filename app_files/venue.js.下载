
//获取cookie
function getRequest(name) {
    var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)", "i");
    var r = window.location.search.substr(1).match(reg);
    if (r != null) return unescape(r[2]); return null;
}

//获取cookie
function getCookie(name) {
    var source = 2;
    var ua = navigator.userAgent.toLowerCase();
    if (ua.match(/MicroMessenger/i) == "micromessenger") {
        source = 0;//微信端
    }
    if (ua.match(/isapp/i) == "isapp") {
        source = 1;
    }
    var arr1, reg1 = new RegExp("(^| )LoginSource=([^;]*)(;|$)");
    arr1 = document.cookie.match(reg1);
    if (arr1 == null || (arr1 != null && unescape(arr1[2]) != source)) {
        $.ajax({
            url: "../../User/SetSource",
            data: {
                Source: source
            },
            cache: false,
            async: false,
            success: function (data) {
            }
        });
    }

    var returndata = '0';
    $.ajax({
        url: "../../User/CheckUserStatus",
        data: {
            //UserId: unescape(arr[2]),
        },
        cache: false,
        async: false,
        success: function (data) {
            if (data == '1') {
                returndata = data;
                return returndata;
            }
            window.location.href = "../../User/Login?BackUrl=" + encodeURI(window.location.href);
        },
        error: function (err) {
            console.log(err);
        }
    });
}

function getSource() {
    var source = 2;
    var ua = navigator.userAgent.toLowerCase();
    if (ua.match(/MicroMessenger/i) == "micromessenger") {
        source = 0;//微信端
    }
    if (ua.match(/isapp/i) == "isapp") {
        source = 1;
    }
    var arr1, reg1 = new RegExp("(^| )LoginSource=([^;]*)(;|$)");
    arr1 = document.cookie.match(reg1);
    if (arr1 == null || (arr1 != null && unescape(arr1[2]) != source)) {
        $.ajax({
            url: "../../User/SetSource",
            data: {
                Source: source
            },
            cache: false,
            success: function (data) {
            }
        });
    }
}


function getCookieOnly(name) {
    //先校验有没有cookie,如果有，校验数据库是否存在此人
    var arr, reg = new RegExp("(^| )" + name + "=([^;]*)(;|$)");
    if (arr = document.cookie.match(reg)) {
        return unescape(arr[2]);
    }
    else {
        return '';
    }
}


window.alert = function (name) {
    var iframe = document.createElement("IFRAME");
    iframe.style.display = "none";
    iframe.setAttribute("src", 'data:text/plain,');
    document.documentElement.appendChild(iframe);
    window.frames[0].window.alert(name);
    iframe.parentNode.removeChild(iframe);
}

//function setCookie(name, value) {
//    var Days = 30;
//    var exp = new Date();
//    exp.setTime(exp.getTime() + Days * 24 * 60 * 60 * 1000);
//    document.cookie = name + "=" + escape(value) + ";expires=" + exp.toGMTString() + ";path=/;";
//}

function getConfigValue(ConfigName) {
    var ConfigValue = '';
    $.ajax({
        url: "../../User/GetConfigValue",
        data: {
            ConfigName: ConfigName
        },
        cache: false,
        async: false,
        success: function (data) {
            ConfigValue = data;
        }
    });
    return ConfigValue;
}